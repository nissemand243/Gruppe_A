version: "3.8"

networks:
  elk:
    name: elk-network
  main:
    name: main-network

volumes:
  caddy_config:
  caddy_data:
  elk_minitwit_data:
  grafana_data:
  prometheus_data:

services:
  api:
    image: salsitu/minitwitapi:latest
    container_name: "minitwit_api"
    restart: unless-stopped
    volumes:
      - $HOME/db/minitwit.db:/tmp/minitwit.db
    networks:
      - main
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      - grafana
      - prometheus

  app:
    image: salsitu/minitwitapp:latest
    container_name: "minitwit_app"
    restart: unless-stopped
    volumes:
      - $HOME/db/minitwit.db:/tmp/minitwit.db
    networks:
      - main
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - grafana
      - prometheus

  grafana:
    image: grafana/grafana-oss:latest
    container_name: "minitwit_grafana"
    restart: unless-stopped
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/home_dashboard.json"
      GF_SECURITY_ADMIN_PASSWORD: "${GRAFANA_PASSWD:-admin}"
      GF_SERVER_DOMAIN: "${SCHEME:-http}://${DOMAINNAME:-localhost}"
      GF_SERVER_ROOT_URL: "${SCHEME:-http}://${DOMAINNAME:-localhost}/grafana/"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
    user: root
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana_data:/var/lib/grafana
    networks:
      - main
    ports:
      - "127.0.0.1:3000:3000"

  prometheus:
    image: prom/prometheus:latest
    container_name: "minitwit_prometheus"
    restart: unless-stopped
    user: root
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus/data
    networks:
      - main
    ports:
      - "127.0.0.1:9090:9090"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    container_name: "minitwit_elasticsearch"
    environment:
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      discovery.type: "single-node"
    volumes:
      - elk_minitwit_data:/usr/share/elasticsearch/data
    networks:
      - elk
    ports:
      - "127.0.0.1:9200:9200"

  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:7.10.2
    container_name: "minitwit_filebeat"
    user: root
    volumes:
      - ./docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:7.10.2
    container_name: "minitwit_kibana"
    environment:
      SERVER_BASEPATH: "/kibana"
      SERVER_REWRITEBASEPATH: "true"
      TELEMETRY_ENABLED: "false"
      elasticsearch.hosts: '["http://elasticsearch:9200"]'
    networks:
      - elk
    ports:
      - 127.0.0.1:5601:5601
    depends_on:
      - elasticsearch

  caddy:
    image: caddy:2-alpine
    container_name: "minitwit_caddy"
    restart: unless-stopped
    environment:
      DOMAINNAME: ${DOMAINNAME:-localhost:80}
      KIBANA_PW_HASH: "${KIBANA_PW_HASH}"
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_config:/config
      - caddy_data:/data
    network_mode: host
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - DAC_OVERRIDE
